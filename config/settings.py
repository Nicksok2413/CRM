"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

# ======================================================================
# ...
# ======================================================================

ALLOWED_HOSTS = [
    "127.0.0.1",
    "0.0.0.0",
]

INTERNAL_IPS = [
    "127.0.0.1",
    "0.0.0.0",
]

if DEBUG:
    import socket
    hostname, _, ips = socket.gethostbyname_ex(socket.gethostname())
    INTERNAL_IPS.append("10.0.2.2")
    INTERNAL_IPS.extend(
        [ip[: ip.rfind(".")] + ".1" for ip in ips]
    )

# ======================================================================

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Приложения
    'apps.advertisements.apps.AdvertisementsConfig',
    'apps.common.apps.CommonConfig',
    'apps.contracts.apps.ContractsConfig',
    'apps.customers.apps.CustomersConfig',
    'apps.leads.apps.LeadsConfig',
    'apps.products.apps.ProductsConfig',
    'apps.users.apps.UsersConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'


# ======================================================================
# НАСТРОЙКА ДИРЕКТОРИЙ ДЛЯ ШАБЛОНОВ
# ======================================================================

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Указываем Django искать шаблоны в корневой папке templates
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# ======================================================================

WSGI_APPLICATION = 'config.wsgi.application'


# ======================================================================
# НАСТРОЙКА БАЗЫ ДАННЫХ (PostgreSQL)
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# ======================================================================

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT', cast=int), # `cast=int` преобразует строку из .env в число
    }
}

# ======================================================================

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# ======================================================================
# НАСТРОЙКИ ИНТЕРНАЦИОНАЛИЗАЦИИ И ЛОКАЛИЗАЦИИ
# https://docs.djangoproject.com/en/5.2/topics/i18n/
# ======================================================================

LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Определяем форматы, в которых пользователь может вводить дату.
# Django будет пробовать их по порядку при валидации.
# `%d` - день, `%m` - месяц, `%Y` - год.
DATE_INPUT_FORMATS = [
    '%Y-%m-%d',  # '2025-10-25' (стандартный)
]


# ======================================================================
# НАСТРОЙКИ СТАТИЧЕСКИХ ФАЙЛОВ
# https://docs.djangoproject.com/en/5.2/howto/static-files/
# ======================================================================

# URL, по которому будут доступны статические файлы в браузере
STATIC_URL = 'static/'

# Директория, где Django будет искать статические файлы проекта
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Директория, куда `collectstatic` будет собирать все статические файлы для продакшена
# STATIC_ROOT = BASE_DIR / 'staticfiles' # Пока не используем, но это для будущего


# ======================================================================
# НАСТРОЙКИ МЕДИА ФАЙЛОВ
# ======================================================================
MEDIA_URL = '/media/'

MEDIA_ROOT = BASE_DIR / 'uploads'

# ======================================================================


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ======================================================================
# НАСТРОЙКИ АУТЕНТИФИКАЦИИ И АВТОРИЗАЦИИ
# ======================================================================

# Указываем Django использовать кастомную модель пользователя
AUTH_USER_MODEL = 'users.User'

# Указываем Django, как проверять логин/пароль и как загружать права доступа
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# URL для перенаправления неавторизованных пользователей
LOGIN_URL = '/accounts/login/'

# URL, на который пользователь будет перенаправлен после успешного входа
LOGIN_REDIRECT_URL = '/'

# URL, на который пользователь будет перенаправлен после выхода
LOGOUT_REDIRECT_URL = '/accounts/login/'


# ======================================================================
# НАСТРОЙКИ ТЕЛЕФОННЫХ НОМЕРОВ
# ======================================================================

# Регион по умолчанию для парсинга номеров без кода страны (ISO 3166-1 alpha-2).
# 'BY' - Беларусь, 'RU' - Россия, 'KZ' - Казахстан.
DEFAULT_PHONE_REGION = 'BY'


# ======================================================================
# БИЗНЕС-КОНСТАНТЫ ПРОЕКТА
# ======================================================================

# Максимальный размер загружаемого изображения (в МБ)
MAX_IMAGE_SIZE_MB = 2

# Максимальный размер загружаемого документа (в МБ)
MAX_DOCUMENT_SIZE_MB = 10