#!/bin/sh


# ==============================================================================
# Entrypoint-скрипт для Nginx-контейнера.
# Генерирует самоподписанный SSL-сертификат, если он отсутствует.
# ==============================================================================

# `set -e` — это команда "fail fast". Если любая из последующих команд
# завершится с ошибкой, скрипт немедленно прекратит выполнение.
set -e

# Определяем пути к файлам сертификата и ключа внутри контейнера.
CERT_DIR="/etc/nginx/certs"
CERT_FILE="${CERT_DIR}/self-signed.crt"
KEY_FILE="${CERT_DIR}/self-signed.key"

# Проверяем, существуют ли оба файла: сертификат и ключ.
if [ ! -f "$CERT_FILE" ] || [ ! -f "$KEY_FILE" ]; then
  echo "-> (Nginx Entrypoint) SSL-сертификат не найден. Генерируем новый самоподписанный сертификат..."

  # Генерируем сертификат и ключ с помощью openssl.
  # -x509: создать самоподписанный сертификат.
  # -nodes: не защищать ключ паролем.
  # -newkey rsa:2048: сгенерировать новый 2048-битный RSA ключ.
  # -days 365: срок действия сертификата 1 год.
  # -subj: автоматически заполнить информацию о владельце (не важна для self-signed).
  openssl req -x509 -nodes -newkey rsa:2048 -days 365 \
    -keyout "$KEY_FILE" \
    -out "$CERT_FILE" \
    -subj "/C=XX/ST=State/L=City/O=Dev/OU=DevOps/CN=localhost" # Используем общие данные

  echo "-> (Nginx Entrypoint) Сертификат успешно сгенерирован."
else
  echo "-> (Nginx Entrypoint) SSL-сертификат уже существует, генерация пропущена."
fi

# `exec "$@"` не нужен, так как образ Nginx сам выполнит все скрипты из `/docker-entrypoint.d/` и затем запустит основной процесс.