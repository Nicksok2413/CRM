#!/bin/sh

# ==============================================================================
# Entrypoint-скрипт для контейнера Celery Beat (планировщик).
# ==============================================================================

# `set -e` — это команда "fail fast". Если любая из последующих команд
# завершится с ошибкой, скрипт немедленно прекратит выполнение.
set -e

# Планировщику, как и worker'у, для работы нужен брокер сообщений (Redis).
# Вызываем скрипт для ожидания готовности внешних сервисов, передавая ему, какие сервисы нужно ждать.
/wait-for-services.sh redis

echo "-> (Celery Beat Entrypoint) Redis запущен."

# Подготовительные действия.

# Celery Beat создает файл `celerybeat.pid` для отслеживания своего процесса.
# Если контейнер был аварийно завершен, этот файл может остаться и помешать
# новому запуску, вызывая ошибку "Scheduler is already running".
# Эта команда безопасно удаляет старый pid-файл перед каждым запуском.
rm -f /app/celerybeat.pid
echo "-> (Celery Beat Entrypoint) Старый PID-файл удален."

# Запуск основного процесса.

# Указываем пользователя, от имени которого будет запущен процесс.
APP_USER=appuser

# Запускаем Celery Beat от имени appuser, передавая команду из docker-compose.yml.
echo "-> (Celery Beat Entrypoint) Запуск Celery Beat от пользователя ${APP_USER}..."
exec su-exec "${APP_USER}" "$@"